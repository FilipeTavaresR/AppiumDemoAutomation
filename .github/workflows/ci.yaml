name: CI Appium Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Faz checkout do código
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true  # Habilita o Git LFS para baixar arquivos grandes

      # Passo 2: Configura o Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Passo 3: Configura o Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      # Passo 4: Instala o Appium 2.16.1
      - name: Install Appium 2.16.1
        run: |
          npm install -g appium@2.16.1
          appium -v

      # Passo 5: Instala o driver UiAutomator2
      - name: Install UiAutomator2 Driver
        run: |
          appium driver install uiautomator2
          appium driver list --installed

      # Passo 6: Inicia o Appium Server
      - name: Start Appium Server
        run: |
          appium --log-level debug &
          APPIUM_PID=$!
          echo "Appium Server started with PID: $APPIUM_PID"

      # Passo 7: Baixa o snapshot do emulador
      - name: Download Emulator Snapshot
        uses: actions/download-artifact@v4
        with:
          name: snap_2025-02-21_21-22-59.zip
          path: src/test/resources/

      # Passo 8: Extrai o snapshot
      - name: Extract Emulator Snapshot
        run: |
          unzip src/test/resources/snap_2025-02-21_21-22-59.zip -d /home/runner/.android/avd/Pixel_8_Pro_API_30.avd/snapshots/

      # Passo 9: Inicia o emulador Android
      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30  # Versão do Android
          arch: x86_64  # Arquitetura do emulador
          profile: pixel_xl  # Perfil do dispositivo padrão
          snapshot: default_boot  # Nome do snapshot (verifique o nome correto no arquivo extraído)
          script: |
            adb wait-for-device
            echo "Esperando o emulador inicializar..."
            sleep 30  # Espera 30 segundos para o emulador inicializar
            echo "Emulador iniciado."

      # Passo 10: Verifica se o emulador está funcionando
      - name: Check Emulator Status
        run: |
          adb devices
          adb shell getprop sys.boot_completed

      # Passo 11: Instala o APK no emulador
      - name: Install APK
        run: |
          adb install src/test/resources/app-debug.apk

      # Passo 12: Executa os testes Appium
      - name: Run Appium Tests
        run: mvn test

      # Passo 13: Publica os resultados dos testes (opcional)
      - name: Publish Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports

      # Passo 14: Encerra o Appium Server
      - name: Stop Appium Server
        run: |
          kill $APPIUM_PID
          echo "Appium Server stopped."